Certified Kubernetes Administrator (CKA): Practice Exam: Part 9
-------------------------------------------------------------
Introduction
This lab provides practice scenarios to help prepare you for the Certified Kubernetes Administrator (CKA) Exam. You will be presented with tasks to complete, as well as server(s) and/or an existing Kubernetes cluster to complete them in. You will need to use your knowledge of Kubernetes, to successfully complete the provided tasks, much like you would on the real CKA exam. Good luck!

Solution
Log in to the server using the credentials provided:

ssh cloud_user@<PUBLIC_IP_ADDRESS>
Create a Multi-Container Pod
Switch to the acgk8s context:
kubectl config use-context acgk8s
Create a YAML file named multi.yml:
apiVersion: v1
kind: Pod
metadata:
  name: multi
  namespace: baz
spec:
  containers:
  - name: nginx
    image: nginx
  - name: redis
    image: redis
Save the file:
ESC
:wq
Create the multi-container pod:
kubectl create -f multi.yml
Check the status of the pod:
kubectl get pods -n baz
Check the status of the exam objectives:
./verify.sh
Create a Pod Which Uses a Sidecar to Expose the Main Container's Log File to Stdout
Create a YAML file named logging-sidecar.yml:
vim logging-sidecar.yml
In the file, paste the following:
apiVersion: v1
kind: Pod
metadata:
  name: logging-sidecar
  namespace: baz
spec:
  containers:
  - name: busybox1
    image: busybox
    command: ['sh', '-c', 'while true; do echo Logging data > /output/output.log; sleep 5; done']
    volumeMounts:
    - name: sharedvol
      mountPath: /output
  - name: sidecar
    image: busybox
    command: ['sh', '-c', 'tail -f /input/output.log']
    volumeMounts:
    - name: sharedvol
      mountPath: /input
  volumes:
  - name: sharedvol
    emptyDir: {}
Save the file:
ESC
:wq
Create the logging-sidecar pod:
kubectl create -f logging-sidecar.yml
Check the status of the pod:
kubectl get pods -n baz
Check the logging-sidecar logs:
kubectl logs logging-sidecar -n baz -c sidecar
Check the status of the exam objectives:
./verify.sh
Conclusion
Congratulations â€” you've completed this hands-on lab!